# ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
# ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#    ██║   ██╔████╔██║██║   ██║ ╚███╔╝
#    ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗
#    ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#    ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝
# https://github.com/tmux/tmux/

# ┌─┐┌─┐┌┬┐┌┬┐┬┌┐┌┌─┐┌─┐
# └─┐├┤  │  │ │││││ ┬└─┐
# └─┘└─┘ ┴  ┴ ┴┘└┘└─┘└─┘

# Enable focus events
set -g focus-events on

# Use system clipboard
set -g set-clipboard on

# Automatically resize window to fit the largest client when multiple clients are attached
setw -g aggressive-resize on

# Set the default shell
set -g default-shell $SHELL

# Start windows and pane numbering with index 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Re-number windows when one is closed
set -g renumber-windows on

# Set word separators for automatic word selection
setw -g word-separators ' @"=()[]_-:,.'
setw -ag word-separators "'"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Remove delay when pressing escape key
set -s escape-time 0

# Increase scrollback buffer size
set -g history-limit 50000

# Enable mouse support for scrolling and pane selection
set -g mouse on

# Set title
set -g set-titles on
set -g set-titles-string "#T"

# Automatically rename windows based on current directory basename
set -g status-interval 5
set -g automatic-rename on
set -g automatic-rename-format '#{b:pane_current_path}'

# Set the default command to reattach-to-user-namespace
if-shell '[[ $(uname) = "Darwin" ]]' 'set -g default-command "reattach-to-user-namespace -l $SHELL"'

# Variables for color scheme
set -g @left_sep ""
set -g @alt_sep ""
set -g @right_sep ""
set -g @section_a "#[fg=$PALETTE_BA_PRIMARY_BG, bg=$PALETTE_SL_TMUX, bold,nounderscore,noitalics]"
set -g @section_a_sep "#[fg=$PALETTE_SL_TMUX, bg=$PALETTE_SL_SECTION_B_BG, nobold,nounderscore,noitalics]"
set -g @section_b "#[fg=$PALETTE_SL_SECTION_B_FG, bg=$PALETTE_SL_SECTION_B_BG, nobold,nounderscore,noitalics]"
set -g @section_b_sep "#[fg=$PALETTE_SL_SECTION_B_BG, bg=$PALETTE_SL_SECTION_C_BG, nobold,nounderscore,noitalics]"
set -g @section_c "#[fg=$PALETTE_SL_SECTION_C_FG, bg=$PALETTE_SL_SECTION_C_BG, nobold,nounderscore,noitalics]"
set -g @section_c_sep "#[fg=$PALETTE_SL_SECTION_C_BG, bg=$PALETTE_BA_PRIMARY_BG, nobold,nounderscore,noitalics]"
set -g @section_wl_sep "#[fg=$PALETTE_BA_PRIMARY_BG, bg=$PALETTE_SL_SECTION_C_BG, nobold,nounderscore,noitalics]"
set -g @section_w "#[fg=$PALETTE_SL_TAB, bg=$PALETTE_BA_PRIMARY_BG, nobold,nounderscore,noitalics]"
set -g @section_wr_sep "#[fg=$PALETTE_BA_PRIMARY_BG, bg=$PALETTE_SL_TAB, nobold,nounderscore,noitalics]"
set -g @section_bg "#[none, bg=$PALETTE_BA_PRIMARY_BG, nobold,nounderscore,noitalics]"

# Status line configuration
set -g status on
set -g status-position top
set -g status-justify "left" # left, centre, or right
set -g status-left-style "none"
set -g status-right-style "none"
set -g status-right-length "100"
set -g status-left-length "100"
set -g status-style "#{@section_bg}"
set -g status-left "\
#{@section_a}  #S \
#{@section_a_sep}#{@left_sep} \
#{@section_b}  #{?#{==:#{pane_current_command},nvim},#{@nvim_buffer_dir},#{b:pane_current_path}} \
#{@section_b_sep}#{@left_sep} \
#{@section_c} #(tmux-session-ordinal) #{@section_c_sep}#{@left_sep}   \
"
set -g status-right "\
#{@section_c_sep}#{@right_sep}#{@section_c} 󰓩 #{window_index}/#{session_windows} #{@alt_sep}#{?pane_in_mode,  COPY,  #P/#{window_panes}} \
#{@section_b_sep}#{@right_sep}\
#{@section_b} 󰋦 #(whoami)\
#{@section_a_sep} #{@right_sep}\
#{@section_a}  #{pane_current_command} \
"

set -g visual-activity off
setw -g monitor-activity on
setw -g window-status-separator ""
setw -g window-status-style "fg=$PALETTE_SL_SECTION_C_FG, bg=$PALETTE_SL_SECTION_C_BG"
setw -g window-status-activity-style "fg=$PALETTE_SL_SECTION_B_FG, bg=$PALETTE_SL_SECTION_C_BG"
setw -g window-status-format "#{@section_wl_sep}#{@left_sep}#[default] 󰓪 #I #W #{@section_c_sep}#{@left_sep}"
setw -g window-status-current-format "#{@section_wr_sep}#{@left_sep} 󰓩 #I #W #{@section_w}#{@left_sep}"

# Tree mode and selection appearance
set -g mode-style "fg=$PALETTE_SL_SECTION_B_FG, bg=$PALETTE_SL_SECTION_B_BG, bold"

# Messages and commands
set -g message-style "fg=$PALETTE_SL_SECTION_B_FG, bg=$PALETTE_SL_SECTION_B_BG"
set -g message-command-style "fg=$PALETTE_SL_SECTION_B_FG, bg=$PALETTE_SL_SECTION_B_BG"

# Popup border style
set -g popup-border-style "fg=default, bg=default"
set -g popup-border-lines none

# Enable true color support for better color rendering
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",alacritty:RGB,xterm-256color:RGB,gnome*:RGB"

# Set the time in milliseconds for which the indicators shown by the display-panes command appear
set -g display-panes-time 2000

# Display messages for 4 seconds
set -g display-time 4000

# Pane border styling and colors
set -g pane-border-status off
set -g pane-border-format "  #P "
set -g pane-border-style "fg=$PALETTE_BA_SECONDARY_BG,bg=default"
set -g pane-active-border-style "fg=$PALETTE_SL_TMUX,bg=default"

# Dynamic pane border status - show only when multiple panes exist
set-hook -g after-split-window "set pane-border-status top"
set-hook -g after-kill-pane "if -F '#{==:#{window_panes},1}' 'set pane-border-status off'"
set-hook -g window-pane-changed "if -F '#{==:#{window_panes},1}' 'set pane-border-status off' 'set pane-border-status top'"
set-hook -g pane-focus-in "if -F '#{==:#{pane_current_command},nvim}' 'setw monitor-activity off'"
set-hook -g pane-focus-out "if -F '#{!=:#{pane_current_command},nvim}' 'setw monitor-activity on'"

# ┌┐ ┬┌┐┌┌┬┐┬┌┐┌┌─┐┌─┐
# ├┴┐││││ │││││││ ┬└─┐
# └─┘┴┘└┘─┴┘┴┘└┘└─┘└─┘

# Reload config file
unbind r
bind C-r run-shell "tmux source-file ~/.tmux.conf && tmux display 'Tmux config successfully reloaded!'"

# Sync panes (send input to all panes in the current window)
bind C-s setw synchronize-panes \; display 'Sync Panes: #{?pane_synchronized,on,oft}'

# Jump to last window by pressing prefix key twice
bind C-b last-window

# Swap the current window left or right with `⌃⇧←` | `⌃⇧→`
bind -n C-S-Left swap-window -t -1
bind -n C-S-Right swap-window -t +1

# Copy mode key bindings with vim-style navigation
bind Enter copy-mode
bind b list-buffers
bind P choose-buffer
bind -T edit-mode-vi Up send -X history-up
bind -T edit-mode-vi Down send -X history-down
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi V send -X select-line
bind -T copy-mode-vi C-v run "tmux send -X rectangle-toggle; tmux send -X begin-selection"
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

if-shell '[[ $(uname) = "Darwin" ]]' \
  'bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"' \
  'bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -in"'

# Layout shortcuts for equal pane sizing
bind = select-layout even-horizontal
bind | select-layout even-vertical

# Resize panes
bind J resize-pane -D 1
bind K resize-pane -U 1
bind H resize-pane -L 1
bind L resize-pane -R 1

# Vim-style pane navigation
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R

# Disable confirm before killing
bind x kill-pane

# Create new windows and splits in current working directory
bind c new-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

# ┌─┐┬  ┬ ┬┌─┐┬┌┐┌┌─┐
# ├─┘│  │ ││ ┬││││└─┐
# ┴  ┴─┘└─┘└─┘┴┘└┘└─┘

# https://github.com/christoomey/vim-tmux-navigator
set -g @plugin 'christoomey/vim-tmux-navigator'

# https://github.com/tmux-plugins/tpm
set -g @plugin 'tmux-plugins/tpm'

# https://github.com/tmux-plugins/tmux-open
set -g @plugin 'tmux-plugins/tmux-open'

# https://github.com/tmux-plugins/tmux-yank
set -g @plugin 'tmux-plugins/tmux-yank'

# https://github.com/tmux-plugins/tmux-urlview
set -g @plugin 'tmux-plugins/tmux-urlview'

# https://github.com/tmux-plugins/tmux-resurrect
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# https://github.com/tmux-plugins/tmux-continuum
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'alacritty'

# Initialize TMUX plugin manager. Keep this line at the very bottom
run '~/.tmux/plugins/tpm/tpm'
